{"version":3,"sources":["../server.js"],"names":["express","require","hbs","fs","port","process","env","PORT","app","registerPartials","__dirname","set","use","req","res","next","now","Date","toString","log","method","url","console","appendFile","err","static","registerHelper","getFullYear","text","toUpperCase","get","render","pageTitle","welcomeMessage","send","errorMessage","listen"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,MAAMD,QAAQ,KAAR,CAAZ;AACA,IAAME,KAAKF,QAAQ,IAAR,CAAX;;AAEA,IAAMG,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAmB,IAAhC;;AAEA,IAAIC,MAAMR,SAAV;;AAEAE,IAAIO,gBAAJ,CAAsBC,YAAY,iBAAlC;AACAF,IAAIG,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAEAH,IAAII,GAAJ,CAAQ,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxB,QAAIC,MAAM,IAAIC,IAAJ,GAAWC,QAAX,EAAV;AACA,QAAIC,MAASH,GAAT,UAAiBH,IAAIO,MAArB,SAA+BP,IAAIQ,GAAvC;AACAC,YAAQH,GAAR,CAAYA,GAAZ;AACAhB,OAAGoB,UAAH,CAAc,YAAd,EAA4BJ,MAAM,IAAlC,EAAwC,UAACK,GAAD,EAAS;AAC7C,YAAIA,GAAJ,EAAS;AACLF,oBAAQH,GAAR,CAAY,gCAAZ;AACH;AACJ,KAJD;AAKAJ;AACH,CAVD;;AAYA;AACA;AACA;;AAEAP,IAAII,GAAJ,CAAQZ,QAAQyB,MAAR,CAAef,YAAY,SAA3B,CAAR;;AAEAR,IAAIwB,cAAJ,CAAmB,gBAAnB,EAAqC,YAAM;AACvC,WAAO,IAAIT,IAAJ,GAAWU,WAAX,EAAP;AACH,CAFD;;AAIAzB,IAAIwB,cAAJ,CAAmB,UAAnB,EAA+B,UAACE,IAAD,EAAU;AACrC,WAAOA,KAAKC,WAAL,EAAP;AACH,CAFD;;AAIArB,IAAIsB,GAAJ,CAAQ,GAAR,EAAa,UAACjB,GAAD,EAAMC,GAAN,EAAc;AACvBA,QAAIiB,MAAJ,CAAW,UAAX,EAAuB;AACnBC,mBAAW,WADQ;AAEnBC,wBAAgB;AAFG,KAAvB;AAIH,CALD;;AAOAzB,IAAIsB,GAAJ,CAAQ,QAAR,EAAkB,UAACjB,GAAD,EAAMC,GAAN,EAAc;AAC7BA,QAAIiB,MAAJ,CAAW,WAAX,EAAwB;AACpBC,mBAAW;AADS,KAAxB;AAGF,CAJD;;AAMAxB,IAAIsB,GAAJ,CAAQ,MAAR,EAAgB,UAACjB,GAAD,EAAMC,GAAN,EAAc;AAC3BA,QAAIoB,IAAJ,CAAS;AACLC,sBAAc;AADT,KAAT;AAGF,CAJD;;AAMA3B,IAAI4B,MAAJ,CAAWhC,IAAX,EAAiB,YAAM;AACnBkB,YAAQH,GAAR,CAAY,2BAAZ;AACH,CAFD","file":"server.js","sourcesContent":["const express = require('express');\nconst hbs = require('hbs');\nconst fs = require('fs');\n\nconst port = process.env.PORT|| 3000;\n\nvar app = express();\n\nhbs.registerPartials((__dirname + '/views/partials'))\napp.set('view engine', 'hbs');\n\napp.use((req, res, next) => {\n    var now = new Date().toString();\n    var log = `${now}: ${req.method} ${req.url}`\n    console.log(log);\n    fs.appendFile('server.log', log + '\\n', (err) => {\n        if (err) {\n            console.log('Unable to append to server log')\n        }\n    });\n    next();\n});\n\n// app.use((req, res, next) => {\n//     res.render('maintenance.hbs')\n// });\n\napp.use(express.static(__dirname + '/public'));\n\nhbs.registerHelper('getcurrentYear', () => {\n    return new Date().getFullYear();\n});\n\nhbs.registerHelper('screamIt', (text) => {\n    return text.toUpperCase();\n});\n\napp.get('/', (req, res) => {\n    res.render('home.hbs', {\n        pageTitle: 'Home Page',\n        welcomeMessage: 'Welcome to my website'\n    });\n});\n\napp.get('/about', (req, res) => {\n   res.render('about.hbs', {\n       pageTitle: 'About Page'\n   });\n});\n\napp.get('/bad', (req, res) => {\n   res.send({\n       errorMessage: 'Unable to fulfill request'\n   })\n});\n\napp.listen(port, () => {\n    console.log(\"server is up on port 3000\")\n});"]}